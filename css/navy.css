/* Start Variables */
:root {
  --clr-primary: #2196f3;
  --clr-secondary: #1787e0;
  --section-padding: 6.25rem 0;
  --section-bg: #ececec;
  --transition-duration: 0.3s;
}
/* End Variables */

/* Start Global Rules */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: 'Cairo', system-ui;
}

ul {
  list-style: none;
}

a {
  display: inline-block;
  text-decoration: none;
  color: inherit; /* testing */
}

p {
  line-height: 1.5;
}

img {
  max-width: 100%;
  object-fit: cover;
}

.container {
  padding: 0 1rem;
}

@media (min-width: 768px) {
  .container {
    width: min(97.5%, 1200px);
    margin: 0 auto;
  }
}
/* End Global Rules */

/* Start Components */
.section-title {
  font-size: 1.875rem;
  line-height: 1.15; /* normalize */
  text-transform: uppercase;
  border: 2px solid #000;
  width: fit-content;
  margin: 0 auto 2.5em;
  padding: 0.35em 0.7em;
  position: relative;
  transition: color var(--transition-duration),
    border-color var(--transition-duration);
}

.section-title:hover {
  color: #fff;
  border-color: #fff;
  /* using this here will immediately cancel it when the mouse is out! */
  /* if we used it on the element itself, it will delay the transition out as well so the delay will be applied on hover AND on mouse out */
  transition-delay: 0.5s; /* animation duration */
}

.section-title::before,
.section-title::after {
  content: '';
  position: absolute;
  z-index: -1;
  top: 50%;
  transform: translateY(-50%);
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background-color: var(--clr-primary);
}

.section-title::before {
  left: -30px;
}

.section-title::after {
  right: -30px;
}

.section-title:hover::before {
  animation: move-right 0.5s linear forwards;
}

.section-title:hover::after {
  animation: move-left 0.5s linear forwards;
}

@keyframes move-right {
  50% {
    left: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    left: 0;
    width: 50%;
    height: 100%;
    border-radius: 0;
  }
}

@keyframes move-left {
  50% {
    right: 0;
    width: 12px;
    height: 12px;
  }
  100% {
    right: 0;
    width: 50%;
    height: 100%;
    border-radius: 0;
  }
}
/* End Components */

/* Start Header */
header {
  background-color: #fff;
  box-shadow: 0 0 10px #ddd;
}

header .container {
  position: relative;
}

.nav {
  text-align: center;
}

.logo {
  font-size: 1.625rem;
  font-weight: bold;
  color: var(--clr-primary);
  transition: color var(--transition-duration);
}

.logo:hover {
  color: var(--clr-secondary);
}

.nav__list {
  display: flex;
  justify-content: center;
}

.nav__link {
  font-size: 0.85rem;
  padding: 0.75em;
  position: relative;
  transition: color var(--transition-duration),
    background-color var(--transition-duration);
}

.nav__link::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 4px;
  width: 0%;
  background-color: var(--clr-primary);
  transition: width var(--transition-duration);
}

/* :focus-visible has the sole purpose of applying styles only on focus by keyboard, styles won't persist after a click as is the case with :focus */
.nav__link:hover,
.nav__link:focus-visible {
  color: var(--clr-primary);
  background-color: #fafafa;
}

.nav__link:hover::before,
.nav__link:focus-visible::before {
  width: 100%;
}

.mega-menu {
  width: 100%;
  padding: 0 5px;
  background-color: #fff;
  border-bottom: 3px solid var(--clr-primary);
  border-top: 1px solid #e9e6e6;
  position: absolute;
  left: 0;
  top: calc(100% + 50px);
  z-index: -1;
  opacity: 0;
  transition: top var(--transition-duration), opacity var(--transition-duration);
}

.nav__link:hover + .mega-menu,
.nav__link:focus-visible + .mega-menu,
/* uncomment these after hero section (z-index will go under and the mega-menu won't be hovered out of thin air) */
.mega-menu:hover,
/* THIS IS ONLY FOR SCREEN READERS (tab) */
.mega-menu:focus-within {
  opacity: 1;
  top: 100%;
  z-index: 100; /* mega-menu has to appear above everything */
}

.mega-menu__image {
  display: none;
}

.mega-menu__link {
  width: 100%;
  padding: 0.8em;
  font-size: 1.125rem;
  line-height: 1.15; /* normalize */
  font-weight: bold;
  text-align: left;
  color: var(--clr-primary);
  border-bottom: 1px solid #e9e6e6;
  position: relative;
}

.mega-menu__list:last-of-type li:last-child .mega-menu__link {
  border: 0;
}

.mega-menu__link::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 0%;
  background-color: #fafafa;
  z-index: -1;
  transition: width var(--transition-duration);
}

.mega-menu__link:hover::before,
.mega-menu__link:focus-visible::before {
  width: 100%;
}

.mega-menu__link i {
  margin-right: 10px;
}

@media (min-width: 768px) {
  .nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .nav__link {
    font-size: 1.125rem;
    padding: 1em 1.5em;
  }

  .mega-menu {
    display: flex;
    align-items: center;
    gap: 2.5rem;
    padding: 2em;
  }

  .mega-menu__list {
    flex: 1;
  }

  .mega-menu__list:first-of-type li:last-child .mega-menu__link {
    border: 0;
  }
}

@media (min-width: 992px) {
  .mega-menu__image {
    display: block;
  }

  .mega-menu__list {
    /* This prevents the word wrap but at some point the space gets too small left and right */
    /* min-width: fit-content; */
    min-width: 250px;
  }
}
/* End Header */

/* Start Hero */
.hero {
  position: relative;
}

.hero::before {
  content: '';
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  background-color: var(--section-bg);
}

.hero .container {
  min-height: calc(100vh - 95.38px); /* header height */
  display: flex;
  align-items: center;
  justify-content: center;
  padding-bottom: 7.5em;
}

.hero__text {
  text-align: center;
}

.hero__text h1 {
  font-size: 1.75rem;
  letter-spacing: -2px;
  line-height: 1.15;
}

.hero__text p {
  color: #666;
  font-size: 1.125rem;
  margin-top: 0.5em;
  max-width: 480px;
}

.hero__img {
  display: none;
}

@media (min-width: 768px) {
  .hero .container {
    min-height: calc(100vh - 69px); /* header height */
  }

  .hero__text h1 {
    font-size: 2.5rem;
  }

  .hero__text p {
    font-size: 1.5rem;
  }
}

@media (min-width: 992px) {
  .hero__text {
    text-align: left;
    width: 45%;
  }

  .hero__img {
    display: block;
    width: 55%;
  }
}

.go-down {
  position: absolute;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  color: var(--clr-primary);
  transition: color var(--transition-duration);
}

.go-down:hover {
  color: var(--clr-secondary);
}

.go-down i {
  animation: bounce 1.5s infinite;
}

@keyframes bounce {
  0%,
  20%,
  50%,
  80% {
    transform: translateY(0);
  }
  40%,
  60% {
    transform: translateY(-15px);
  }
}
/* End Hero */

/* Start Waves */
.waves {
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 40px;
  min-height: 40px;
  max-height: 150px;
}

.parallax > use {
  animation: move-forever 25s cubic-bezier(0.55, 0.5, 0.45, 0.5) infinite;
}

.parallax > use:nth-child(1) {
  animation-delay: -2s;
  animation-duration: 7s;
}

.parallax > use:nth-child(2) {
  animation-delay: -3s;
  animation-duration: 10s;
}

.parallax > use:nth-child(3) {
  animation-delay: -4s;
  animation-duration: 13s;
}

.parallax > use:nth-child(4) {
  animation-delay: -5s;
  animation-duration: 20s;
}

@keyframes move-forever {
  0% {
    transform: translate3d(-90px, 0, 0);
  }
  100% {
    transform: translate3d(85px, 0, 0);
  }
}

/* Scaling for bigger screens */
@media (min-width: 768px) {
  .waves {
    height: 15vh;
    min-height: 100px;
  }
}
/* End Waves */

/* Start Articles */
.articles {
  padding: var(--section-padding);
}

.articles .container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: 2.5rem;
}

.card {
  box-shadow: 0 2px 15px rgb(0 0 0 / 10%);
  border-radius: 6px;
  overflow: hidden;
  transition: transform var(--transition-duration),
    box-shadow var(--transition-duration);
}

.card:hover {
  transform: translateY(-10px);
  box-shadow: 0 2px 15px rgb(0 0 0 / 20%);
}

/* to remove that extra space which is caused by the img's inline nature that makes it align itself with the text baseline (line-height) */
.card__img {
  display: block;
}

.card__text {
  padding: 1.25em;
}

.card__text h3 {
  line-height: 1.15; /* normalize */
}

.card__text p {
  color: #777;
  margin-top: 0.5em;
}

.card__info {
  padding: 1.25em;
  border-top: 1px solid #e6e6e7;
  color: var(--clr-primary);
  font-weight: bold;
  line-height: 1.15; /* normalize */
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.card:hover .card__info i {
  animation: move-arrow 0.6s linear infinite;
}

@keyframes move-arrow {
  to {
    transform: translateX(10px);
  }
}

/* End Articles */
